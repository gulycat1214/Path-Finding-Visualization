{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/Node.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './Node.css';\nexport default function Node(props) {\n  _s();\n\n  const {\n    row,\n    col,\n    isFinish,\n    isStart,\n    isWall,\n    addWall\n  } = props;\n  const [extraClassName, setExtraClassName] = useState(isFinish ? 'node-finish' : isStart ? 'node-start' : isWall ? 'node-is-wall' : '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `node ${extraClassName}`,\n    onClick: () => {\n      console.log(isWall);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Node, \"7mEbK5tZPwYmBx41rV8qg4NBWPA=\");\n\n_c = Node;\n\nvar _c;\n\n$RefreshReg$(_c, \"Node\");","map":{"version":3,"sources":["/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/Node.js"],"names":["React","useState","Node","props","row","col","isFinish","isStart","isWall","addWall","extraClassName","setExtraClassName","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,eAAe,SAASC,IAAT,CAAeC,KAAf,EAAsB;AAAA;;AAEjC,QAAM;AAACC,IAAAA,GAAD;AAAMC,IAAAA,GAAN;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA,MAA9B;AAAsCC,IAAAA;AAAtC,MAAiDN,KAAvD;AACA,QAAM,CAACO,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAACK,QAAQ,GAAG,aAAH,GAAmBC,OAAO,GAAG,YAAH,GAAkBC,MAAM,GAAG,cAAH,GAAoB,EAA/E,CAApD;AAEA,sBACI;AACI,IAAA,SAAS,EAAG,QAAOE,cAAe,EADtC;AAEI,IAAA,OAAO,EAAE,MAAM;AACXE,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACH;AAJL;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAduBN,I;;KAAAA,I","sourcesContent":["import React, {useState} from 'react';\nimport './Node.css';\nexport default function Node (props) {\n\n    const {row, col, isFinish, isStart, isWall, addWall} = props;\n    const [extraClassName, setExtraClassName] = useState(isFinish ? 'node-finish' : isStart ? 'node-start' : isWall ? 'node-is-wall' : '');\n\n    return(\n        <div \n            className={`node ${extraClassName}`}\n            onClick={() => {\n                console.log(isWall)\n            }}\n        >\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}