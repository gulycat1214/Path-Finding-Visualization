{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/AlgorithmSelector.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'; // This React component is the pop-up dialog to explain \n// how to use the dashboard\n\nexport default function AlgorithmSelector(props) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const algorithms = ['Dijkstra', 'BFS', 'DFS'];\n  const {\n    changeAlgorithm\n  } = props;\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const useStyles = makeStyles({\n    button1: {\n      margin: '20px',\n      backgroundColor: 'red',\n      fontWeight: 'bold'\n    },\n    button2: {\n      margin: '10px',\n      backgroundColor: 'purple',\n      color: 'white',\n      fontWeight: 'bold'\n    }\n  });\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: classes.button1,\n      onClick: handleClickOpen,\n      children: [\"ALGORITHM\", /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: \"What searching Algorithm do you want to use?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: algorithms.map((algorithmName, index) => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button2,\n            onClick: () => {\n              changeAlgorithm(algorithmName);\n              handleClose();\n            },\n            children: algorithmName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AlgorithmSelector, \"sAdzNhf/eEVWcoR6sLHcRgUAoMI=\", true);\n\n_c = AlgorithmSelector;\n\nvar _c;\n\n$RefreshReg$(_c, \"AlgorithmSelector\");","map":{"version":3,"sources":["/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/AlgorithmSelector.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","makeStyles","ArrowDropDownIcon","AlgorithmSelector","props","open","setOpen","useState","algorithms","changeAlgorithm","handleClickOpen","handleClose","useStyles","button1","margin","backgroundColor","fontWeight","button2","color","classes","map","algorithmName","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B,C,CAGA;AACA;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAAA;;AAC/C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACa,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMC,UAAU,GAAG,CAAC,UAAD,EAAa,KAAb,EAAoB,KAApB,CAAnB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAsBL,KAA5B;;AAEA,QAAMM,eAAe,GAAG,MAAM;AAC5BJ,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMK,WAAW,GAAG,MAAM;AACxBL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMM,SAAS,GAAGX,UAAU,CAAC;AAC3BY,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,MADH;AAELC,MAAAA,eAAe,EAAE,KAFZ;AAGLC,MAAAA,UAAU,EAAE;AAHP,KADkB;AAM3BC,IAAAA,OAAO,EAAE;AACPH,MAAAA,MAAM,EAAE,MADD;AAEPC,MAAAA,eAAe,EAAE,QAFV;AAGPG,MAAAA,KAAK,EAAE,OAHA;AAIPF,MAAAA,UAAU,EAAE;AAJL;AANkB,GAAD,CAA5B;AAcA,QAAMG,OAAO,GAAGP,SAAS,EAAzB;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEO,OAAO,CAACN,OAA3B;AAAoC,MAAA,OAAO,EAAEH,eAA7C;AAAA,2CAEE,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,MAAD;AACE,MAAA,IAAI,EAAEL,IADR;AAEE,MAAA,OAAO,EAAEM,WAFX;AAGE,yBAAgB,oBAHlB;AAIE,0BAAiB,0BAJnB;AAAA,8BAME,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA,kBAAsC;AAAtC;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,aAAD;AAAA,kBAEIH,UAAU,CAACY,GAAX,CAAe,CAACC,aAAD,EAAgBC,KAAhB,KAA0B;AACvC,8BAAO,QAAC,MAAD;AAAQ,YAAA,SAAS,EAAEH,OAAO,CAACF,OAA3B;AAAoC,YAAA,OAAO,EAAE,MAAM;AACxDR,cAAAA,eAAe,CAACY,aAAD,CAAf;AACAV,cAAAA,WAAW;AACZ,aAHM;AAAA,sBAGHU;AAHG;AAAA;AAAA;AAAA;AAAA,kBAAP;AAID,SALD;AAFJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AA0BD;;GAxDuBlB,iB;;KAAAA,iB","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\n\n// This React component is the pop-up dialog to explain \n// how to use the dashboard\n\nexport default function AlgorithmSelector(props) {\n  const [open, setOpen] = React.useState(false);\n  const algorithms = ['Dijkstra', 'BFS', 'DFS'];\n\n  const { changeAlgorithm } = props;\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const useStyles = makeStyles({\n    button1: {\n        margin: '20px',\n        backgroundColor: 'red',\n        fontWeight: 'bold'\n    },\n    button2: {\n      margin: '10px',\n      backgroundColor: 'purple',\n      color: 'white',\n      fontWeight: 'bold'\n  },\n  })\n\n  const classes = useStyles();\n\n  return (\n    <>\n      <Button className={classes.button1} onClick={handleClickOpen}>\n        ALGORITHM\n        <ArrowDropDownIcon></ArrowDropDownIcon>\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{\"What searching Algorithm do you want to use?\"}</DialogTitle>\n        <DialogContent>\n          {\n            algorithms.map((algorithmName, index) => {\n              return <Button className={classes.button2} onClick={() => {\n                changeAlgorithm(algorithmName);\n                handleClose();\n              }}>{algorithmName}</Button>\n            })\n          }\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}