{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/PathfindingVisualizer.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport Node from './Node';\nexport default function PathfindingVisualizer() {\n  _s();\n\n  const [nodes, setNodes] = useState([[]]);\n  useEffect(() => {\n    for (let row = 0; row < 15; row++) {\n      const currentRow = [];\n\n      for (let col = 0; col < 50; col++) {\n        currentRow.push([a]);\n      }\n\n      nodes.push(currentRow);\n    }\n\n    setNodes(nodes);\n    console.log(nodes);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hola\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), nodes.map((row, rowIndex) => {\n      /*#__PURE__*/\n      _jsxDEV(\"h2\", {\n        children: \"h\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true);\n}\n\n_s(PathfindingVisualizer, \"FUgfMoqhOtJUDc+gbI0OTW8fcRU=\");\n\n_c = PathfindingVisualizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PathfindingVisualizer\");","map":{"version":3,"sources":["/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/PathfindingVisualizer.js"],"names":["React","Component","useEffect","useState","Node","PathfindingVisualizer","nodes","setNodes","row","currentRow","col","push","a","console","log","map","rowIndex"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,eAAe,SAASC,qBAAT,GAAgC;AAAA;;AAE3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,SAAK,IAAIM,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AAC/B,YAAMC,UAAU,GAAG,EAAnB;;AACA,WAAK,IAAIC,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAG,EAAxB,EAA4BA,GAAG,EAA/B,EAAmC;AAC/BD,QAAAA,UAAU,CAACE,IAAX,CAAgB,CAACC,CAAD,CAAhB;AACH;;AACDN,MAAAA,KAAK,CAACK,IAAN,CAAWF,UAAX;AACH;;AACDF,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACH,GAVQ,CAAT;AAYA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKA,KAAK,CAACS,GAAN,CAAU,CAACP,GAAD,EAAMQ,QAAN,KAAmB;AAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,KAFA,CAFL;AAAA,kBADJ;AAQH;;GAxBuBX,qB;;KAAAA,qB","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport Node from './Node';\nexport default function PathfindingVisualizer(){\n\n    const [nodes, setNodes] = useState([[]]);\n\n    useEffect(() => {\n        for( let row = 0; row < 15; row++) {\n            const currentRow = [];\n            for( let col = 0; col < 50; col++) {\n                currentRow.push([a]);\n            }\n            nodes.push(currentRow);\n        }\n        setNodes(nodes);\n        console.log(nodes);\n    });\n\n    return(\n        <>\n            <h1>hola</h1>\n            {nodes.map((row, rowIndex) => {\n                <h2>h</h2>\n            })}\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}