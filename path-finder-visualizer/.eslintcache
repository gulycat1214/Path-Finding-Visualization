[{"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/reportWebVitals.js":"1","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/App.js":"2","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/index.js":"3","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/PathfindingVisualizer.js":"4","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/Node.js":"5","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/Algorithms/Dijkstra.js":"6","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/NavigationBar.js":"7","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/HelpDialog.js":"8","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/AlgorithmSelector.js":"9","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/Algorithms/Bfs.js":"10"},{"size":362,"mtime":1611589045586,"results":"11","hashOfConfig":"12"},{"size":192,"mtime":1611589513836,"results":"13","hashOfConfig":"12"},{"size":478,"mtime":1611589230031,"results":"14","hashOfConfig":"12"},{"size":7900,"mtime":1611926324628,"results":"15","hashOfConfig":"12"},{"size":611,"mtime":1611846759808,"results":"16","hashOfConfig":"12"},{"size":2416,"mtime":1611925772071,"results":"17","hashOfConfig":"12"},{"size":548,"mtime":1611765389436,"results":"18","hashOfConfig":"12"},{"size":2411,"mtime":1611848631593,"results":"19","hashOfConfig":"12"},{"size":1918,"mtime":1611931696154,"results":"20","hashOfConfig":"12"},{"size":1506,"mtime":1611931678094,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"nfskhd",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/reportWebVitals.js",[],["46","47"],"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/App.js",[],"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/index.js",[],"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/PathfindingVisualizer.js",[],"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/Node.js",["48"],"import React, {useState} from 'react';\nimport './Node.css';\nexport default function Node (props) {\n\n    const {row, col, isFinish, isStart, isWall, onMouseDown, onMouseUp, onMouseEnter} = props;\n    const extraClassName = isFinish ? 'node-finish' : isStart ? 'node-start' : isWall ? 'node-is-wall' : '';\n\n    return(\n        <div \n            id={`node-${row}-${col}`}\n            className={`node ${extraClassName}`}\n            onMouseUp={() => onMouseUp(row, col)}\n            onMouseDown={() => onMouseDown(row, col)}\n            onMouseEnter={() => onMouseEnter(row, col)}\n        >\n        </div>\n    );\n}","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/Algorithms/Dijkstra.js",["49"],"// Implementation of DIJKSTRA's ALGORITHM\n// Functionality:\n// - Set all nodes with distance Infinity to initial node\n// - Sort all nodes by distance to initial node and\n//      get the nearest node\n// - Mark this node as visited, increment distance to origin\n// - Get neighbor nodes and sort again\n// - When arriving to final Node, backtrack to find shortest path.\n\n\nexport function dijkstra(grid, startNode, finishNode) {\n    const unvisistedNodes = getAllNodes(grid);\n    const visitedNodes = [];\n    while(unvisistedNodes.length != 0) {\n        // get nearest node\n        sortNodesByDistance(unvisistedNodes);\n        const closestNode = unvisistedNodes.shift();\n        if(closestNode.isWall) continue;\n        if(closestNode.distance === Infinity) return visitedNodes;\n        // mark as visited\n        closestNode.isVisited = true;\n        visitedNodes.push(closestNode);\n        if(closestNode === finishNode) return visitedNodes;\n        // update distances + 1\n        updateUnvisistedNodes(closestNode, grid);\n    }\n}\n// sort array of nodes by distance to origin\nfunction sortNodesByDistance(unvisistedNodes) {\n    unvisistedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\n}\n// update nodes\nfunction updateUnvisistedNodes(node, grid) {\n    const unvisitedNodes = getUnvisitedNeighbors(node, grid);\n    for(const neighbor of unvisitedNodes) {\n        neighbor.distance = node.distance + 1;\n        neighbor.previousNode = node;\n    }\n}\n// update neighbor nodes\nfunction getUnvisitedNeighbors(node, grid) {\n    const neighbors = [];\n    const {col, row} = node;\n    if(row > 0) neighbors.push(grid[row-1][col]);\n    if(row < grid.length - 1) neighbors.push(grid[row+1][col]);\n    if(col > 0) neighbors.push(grid[row][col-1]);\n    if(col < grid[0].length - 1) neighbors.push(grid[row][col+1]);\n    return neighbors.filter(neighbor => !neighbor.isVisited);\n}\n// iterate grid\nfunction getAllNodes(grid) {\n    const nodes = [];\n    for(const row of grid) {\n        for(const node of row) {\n            nodes.push(node);\n        }\n    }\n    return nodes;\n}\n// backtrack from final node\nexport function getNodesInShortestPathOrder(finishNode) {\n    const nodesInShortestPath = [];\n    let currentNode = finishNode;\n    while(currentNode != null) {\n        nodesInShortestPath.unshift(currentNode);\n        currentNode = currentNode.previousNode;\n    }\n    return nodesInShortestPath;\n}\n\n\n\n\n\n\n\n\n\n\n","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/NavigationBar.js",["50"],"import React from 'react';\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    Button,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nexport default function NavigationBar() {\n  const classes = useStyles();\n    return(\n    <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.text}>\n            PATHFINDING VISUALIZER TOOL\n          </Typography>\n        </Toolbar>\n      </AppBar>  \n    )\n}\n\nconst useStyles = makeStyles({\n  text: {\n    fontWeight: 'bold'\n  }\n})\n","/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/HelpDialog.js",[],"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/PathfindingVisualizer/AlgorithmSelector.js",[],"/home/willi/Escritorio/Dev/Pathfinding Visualization/path-finder-visualizer/src/Algorithms/Bfs.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":1,"column":16,"nodeType":"57","messageId":"58","endLine":1,"endColumn":24},{"ruleId":"59","severity":1,"message":"60","line":14,"column":34,"nodeType":"61","messageId":"62","endLine":14,"endColumn":36},{"ruleId":"55","severity":1,"message":"63","line":6,"column":5,"nodeType":"57","messageId":"58","endLine":6,"endColumn":11},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]